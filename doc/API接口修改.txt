API接口修改
所有旧的接口都可以使用，会有少部分需要修改参数和返回结果

1.获得运单接口

*新增，获取运单的统一接口，尽量使用这个
url:/api/v1/deliveries/get_by_time_and_state
type:GET
param:{start_time:string,end_time:string,state:[integer],type:integer(0表示从本地发出，1表示发往本地)}
#返回结果根据时间排序，最多只支持50个运单
return: {result:1,content:[
{
id:string,
container_id:string,
delivery_date:string,
received_date:string,
state:integer,
state_display:string,
user_id:string,
source_id:string,
source:string,
destination_id:string,
destination:string,
remark:string,
can_delete:bools
}]}

修改
@修改了返回
@参数只支持一个delivery_date
*这个接口后面尽量不要用
url: /api/v1/deliveries/list
type: GET
param: {delivery_date:date_string}
return: {result:1,content:[
{
id:string,
container_id:string,
delivery_date:string,
received_date:string,
state:integer,
state_display:string,
user_id:string,
source_id:string,
source:string,
destination_id:string,
destination:string,
remark:string,
can_delete:bools
}]}

获取已接受运单(*这个可以使用第一个新增的接口来统一获取，以后尽量不是用这个接口)
@返回值修改
url:/api/v1/deliveries/received
type:GET
param:{receive_date:date_string}
return:{result:1,content:[
{
id:string,
container_id:string,
delivery_date:string,
received_date:string,
state:integer,
state_display:string,
user_id:string,
source_id:string,
source:string,
destination_id:string,
destination:string,
remark:string,
can_delete:bools
}
]}

2.检察托清单是否能被加入到运单中,如果可以，则新建lc
url:/api/v1/deliveries/check_forklift
type:POST
param:{forklift_id:string（container_id）}
return:{result:integer,content:{
id:string,
container_id:container_id,
created_at:date_string,
user_id:string,
stocker_id:string,
whouse_id:string,
sum_packages:integer,
accepted_packages:integer
}}

3.添加拖清单
url:/api/v1/deliveries/add_forklift
type:POST
param:{id:string,forklifts:[string]}
return:{result:1,content:string}

4.移除拖清单
url:/api/v1/deliveries/remove_forklift
type:DELETE
param:{forklift_id:string}
return:{result:integer,content:string}

5.发送运单
url:/api/v1/deliveries/send
type:POST
param:{id:string,destination_id:string}
return:{result:integer,content:string}

6.新建运单
url:/api/v1/deliveries
type:POST
param:{delivery:{remark:string},forklifts:[string}
return:{result:integer,content:{
id:string,
container_id:string,
delivery_date:string,
received_date:string,
state:integer,
state_display:string,
user_id:string,
source_id:string,
source:string,
destination_id:string,
destination:string,
remark:string,
can_delete:bools
}}

7.删除运单
url:/api/v1/deliveries
type:DELETE
params:{id:string}
return:{result:integer,content:string}

8.获得运单详细信息
url:/api/v1/deliveries/detail
type:GET
params:{id:string}
return:{result:1,content:{
id:string,
container_id:string,
delivery_date:string,
received_date:string,
state:integer,
state_display:string,
user_id:string,
source_id:string,
source:string,
destination_id:string,
destination:string,
remark:string,
can_delete:bools
}}

9.修改运单
url:/api/v1/deliveries
type:PUT
params:{deliveries:{id:string,remark:string}}
return:{result:integer,content:string}

10.接收运单，表示运单到达目的地，但是还没有被检查
url:/api/v1/deliveries/receive
type:POST
params:{id:string} *注，是container_id，因为这里是扫描接收，扫描的是container_id
return:{result:integer,content:{
id:string,
container_id:string,
delivery_date:string,
received_date:string,
state:integer,
state_display:string,
user_id:string,
source_id:string,
source:string,
destination_id:string,
destination:string,
remark:string,
can_delete:bools
}}

11.确认接收
url:/api/v1/deliveries/confirm_receive
type:POST
params:{id:string}
return:{result:integer,content:string}

12.获取拖清单列表
url:/api/v1/deliveries/forklifts
type:GET
params:{id:string}
return:{result:integer,content:[
{
id:string,
container_id:container_id,
created_at:date_string,
user_id:string,
stocker_id:string,
whouse_id:string,
sum_packages:integer,
accepted_packages:integer
}
]}

——————————————————————————————————————————————
拖清单接口
URL:/api/v1/forklifts

1.获得拖清单

*新增
获得拖清单的同意的接口
url:/get_by_time_and_state
type:GET
params:{start_time:date_string,end_time:date_string,state:[integer],type:0|1}
return:[
{id:string,
container_id:container_id,
created_at:date_string,
user_id:string,
stocker_id:string,
whouse_id:string,
sum_packages:integer,
accepted_packages:integer}
]

@已经废弃，依然兼容，然后面不用了
url:/binds
type:GET
params:{all:string}
return:[
{id:string,
container_id:container_id,
created_at:date_string,
user_id:string,
stocker_id:string,
whouse_id:string,
sum_packages:integer,
accepted_packages:integer}
]

2.新建拖清单
url:
type:GET
param:{forklift:{whouse_id:string,remark:string}}
return:{result:integer,content:
{id:string,
container_id:container_id,
created_at:date_string,
user_id:string,
stocker_id:string,
whouse_id:string,
sum_packages:integer,
accepted_packages:integer}}

3.检查包装箱，如果可以加入拖清单，则直接假如
@修改了参数
url:/check_package
type:POST
param:{id:string,package_id:string}
return:{result:integer,content:string}

4.创建并添加包装箱
@修改了参数
url:/add_package
type:POST
params:{id:string,package_id:strong,part_id:string,quantity_str:string,check_in_time:string}
return:{result:integer,content:{
id:string,
container_id:string,
quantity_str:string,
part_id:string,
quantity:string,
check_in_time:string,
user_id:string,
state:integer,
state_display:string,
position_nr:string
}}

5.从拖清单中删除包装箱
url:/remove_package
type:DELETE
params:{package_id:string}
return:{result:integer,content:string}

6.删除拖清单
url:
type:DELETE
params:{id:string}
return:{result:integer,content:string}

7.获得拖清单详细信息
url:/detail
type:GET
params:{id:string}
return:{result:integer,content:{id:string,
container_id:container_id,
created_at:date_string,
user_id:string,
stocker_id:string,
whouse_id:string,
sum_packages:integer,
accepted_packages:integer}}

8.修改拖清单
url:
type:PUT
params:{id:string,whouse_id:string,remark:string}
return:{result:integer,content:packages:[{
id:string,
container_id:string,
quantity_str:string,
part_id:string,
quantity:string,
check_in_time:string,
user_id:string,
state:integer,
state_display:string,
position_nr:string
}]}

9.获取包装箱列表
url:/packages
type:GET
params:{id:string}
return:{result:integer,content:[{
id:string,
container_id:string,
quantity_str:string,
part_id:string,
quantity:string,
check_in_time:string,
user_id:string,
state:integer,
state_display:string,
position_nr:string
}]}




包装箱相关API
URL:/api/v1/packages

1.获得未绑定的包装箱
url:/binds
type:GET
params:{all:string}
return:[{
id:string,
container_id:string,
quantity_str:string,
part_id:string,
quantity:string,
check_in_time:string,
user_id:string,
state:integer,
state_display:string,
position_nr:string
}]

新的接口，通过时间和状态来获取
url:/	
type:GET
params:{start_time:string,end_time:string,state:[Integer],type:0|1,parent:0|1}
return:[{
id:string,
container_id:string,
quantity_str:string,
part_id:string,
quantity:string,
check_in_time:string,
user_id:string,
state:integer,
state_display:string,
position_nr:string
}]

2.验证唯一码是否可用
url:/validate
type:POST
params:{id:string}
return:{result:integer,content:string}

3.验证唯一码，同上
url:/validate_id
type:GET
params:{id:string}
return:{result:integer,content:string}

4.新建包装箱
url:
type:POST
params:{id:string,part_id:string,quantity_str:string,check_in_time:string}
return:{result:integer,content:{
id:string,
container_id:string,
quantity_str:string,
part_id:string,
quantity:string,
check_in_time:string,
user_id:string,
state:integer,
state_display:string,
position_nr:string
}}

5.修改包装箱
url:
type:PUT
params:{id:string,part_id:string,quantity_str:string,check_in_time:string}
return:{result:integer,content:{
id:string,
container_id:string,
quantity_str:string,
part_id:string,
quantity:string,
check_in_time:string,
user_id:string,
state:integer,
state_display:string,
position_nr:string
}}

6.删除包装箱
url:
type:DELETE
params:{id:string}
return:{result:integer,content:string}

7.检查接收包装箱
url:/check
type:POST
params:{id:string}
return:{result:integer,content:string}

8.取消检查接收包装箱
url:/uncheck
type:POST
params:{id:string}
return:{result:integer,content:string}

9.拒收包装箱
url:/reject
type:POST
params:{id:string}
return:{result:integer,content:string}

获得发运地址
url:/api/v1/locations/get_all
type:GET
params:{}
return:[{name:string,id:string,is_default:0|1}]